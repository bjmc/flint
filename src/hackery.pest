//! A parser for .Fountain files.

file = {
    title_page? ~ body_content ~ EOI
}

title_page   = { start ~ (multiline_pair | pair ~ NEWLINE)+ }
body_content = { ( dialogue | line_element | blank_line)+ }

line_element = _{
    start ~ (
        page_break |
        synopsis |
        note |
        boneyard |
        section_header |
        scene_heading |
        centered_action |
        transition |
        action
    ) ~ &NEWLINE
}

// Title page
char           =  { (ASCII_ALPHANUMERIC | " " | "-" | "(" | ")" | "," | ".") }
key            = @{ char+ }
value          = @{ txt }
pair           =  { key ~ ":" ~ value }
multiline_pair =  { key ~ ":" ~ NEWLINE ~ block_value }
indentation    = _{ (" " | "\t")+ }
block_value    =  {
    PUSH(indentation) ~ value ~ NEWLINE ~ (PEEK ~ value ~ NEWLINE)* ~ DROP
}
// END title page

// Basics
ws         = _{ (" " | "\t") }
start      = _{ SOI | NEWLINE }
end        = _{ EOI  | NEWLINE }
bn_open    =  { ("[[" | "/*") }
blank_line =  { NEWLINE }
txt        =  { (!(NEWLINE | bn_open) ~ ANY)+ }
text       =  _{ (boneyard | note | txt)+ }

section_header = @{ "#"+ ~ ws* ~ text }

page_break = { "="{3, } }

synopsis = { "=" ~ ws* ~ text}

// Scene headers
scene_heading     = _{ NEWLINE ~ scene_heading_txt ~ &(NEWLINE ~ end) }
scene_heading_txt = @{ ((force_scene | header_flag) ~ (!"#" ~ text) ~ scene_number?) }
force_scene       =  { "." ~ !"." }
scene_number      =  { "#" ~ (ASCII_ALPHANUMERIC | "." | "-")+ ~ "#" }
header_flag       =  { ((^"INT" ~ "."? ~ ^"/EXT"?) | ^"EXT" | ^"EST" | ^"I" ~ "."? ~ ^"/E") ~ "."? ~ " " }

// Boneyards & Notes

boneyard     =  _{ "/*" ~ boneyard_txt ~ "*/" }
boneyard_txt =  _{ (boneyard | !"*/" ~ ANY)* }
note_txt     =  { (note | !"]]" ~ ANY)* }
note         =  { "[[" ~ note_txt ~ "]]" }

// Actions

action_text     = @{ text }
centered_action = @{ ">" ~ (!("<" | NEWLINE) ~ ANY)* ~ "<" }
forced_action   =  { "!" ~ action_text }
generic_action  =  { text }
action          =  { (forced_action | generic_action) }

// Characters and dialogue
dialogue          =  { start ~ character ~ (continuation_line | speech)+ }
lyrics            = @{ "~" ~ text ~ &NEWLINE }
speech            =  { (NEWLINE ~ ws* ~ (parenthetical | lyrics | text)) ~ &NEWLINE }
character_name    =  { (("@" ~ text) | ASCII_ALPHA_UPPER ~ (ASCII_ALPHA_UPPER | ASCII_DIGIT)*) }
dual_marker       =  { "^" }
continuation_line =  { NEWLINE ~ " "{2, } ~ &NEWLINE }
parenthetical     =  { "(" ~ (!")" ~ ANY)+ ~ ")" }
character         =  { ws* ~ character_name ~ ws* ~ (parenthetical | dual_marker)* ~ &NEWLINE }

// Transitions
transition         = _{ NEWLINE ~ ws* ~ transition_txt ~ !ws ~ &(NEWLINE ~ end) }
transition_txt = @{ (forced_transition | magic_transition | to_transition) }
forced_transition  =  { ">" ~ text }
to_txt             =  { (!"TO:" ~ ANY)+ }
to_transition      =  { to_txt? ~ "TO:" }
magic_phrases      =  { "CUT TO BLACK" | "FADE TO BLACK" | "FADE OUT" | "FADE IN" }
magic_transition   =  { magic_phrases ~  ("." | ":")? }
